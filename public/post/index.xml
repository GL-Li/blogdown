<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on learn R and use R</title>
    <link>/post/</link>
    <description>Recent content in Posts on learn R and use R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ggplot2: aes(group = ...) overrides default grouping</title>
      <link>/2017/08/13/ggplot2-group-overrides-default-grouping/</link>
      <pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/13/ggplot2-group-overrides-default-grouping/</guid>
      <description>Default grouping in ggplot2 ggplot2 can subset all data into groups and give each group its own appearance or transformation. In many cases new users are not aware that default groups have been created, and are surprised to see the unwanted plot.
There are two ways in which groups are created implicitly:
 If x or y are categorical variables, the rows of date with the same level form a group.</description>
    </item>
    
    <item>
      <title>A uniform way to use ggplot2</title>
      <link>/2017/08/03/a-uniform-way-to-use-ggplot2/</link>
      <pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/08/03/a-uniform-way-to-use-ggplot2/</guid>
      <description>Just finished reading Hadley Wickmanâ€™s ggplot2 book, (second eition). Before that I have been using ggplot2 for a couple of years, mainly learned by reading documentation and searching for help online. This package is a powerful and comprehensive tool for generating static plots.
But I also feel that ggplot2 is a little bit too flexible; the same plot can be made with many different ways. This fexibility provides obvious convenience but also introduces a lot of confusion and extra burden of memorization.</description>
    </item>
    
    <item>
      <title>Compare data.table pipes and magrittr pipes</title>
      <link>/2017/07/25/improve-data-table-readability-with-pipes/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/25/improve-data-table-readability-with-pipes/</guid>
      <description>There are two ways to chain data.table operation, using data.table pipes or using magrittr pipes. For a data.table dt, the data.table pipes take the form of dt[][][]... and magrittr pipes dt %&amp;gt;% .[] %&amp;gt;% .[] %&amp;gt;% ....
Below is an example that compares their readability. The readability of data.table pipes has been criticized in this stackoverflow post. It seems, however, not that hard to follow for those who have basic knowledge of data.</description>
    </item>
    
  </channel>
</rss>